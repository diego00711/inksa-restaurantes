// src/services/reviewServices.js
// =================================================================
// ARQUIVO CENTRAL DE SERVI√áOS DE AVALIA√á√ÉO (VERS√ÉO CORRIGIDA)
// =================================================================

console.log('üöÄ M√≥dulo central de servi√ßos de avalia√ß√£o (reviewServices.js) est√° sendo carregado.');

// --- 1. IMPORTA√á√ïES DAS APIs REAIS ---
// CORRE√á√ÉO: Importando apenas as fun√ß√µes que realmente existem nos arquivos de servi√ßo.

// Este servi√ßo tem tanto a fun√ß√£o de buscar (GET) quanto de postar (POST).
import { getRestaurantReviews, postRestaurantReview } from './restaurantReviewsService.js';

// Este servi√ßo S√ì tem a fun√ß√£o de postar (POST), usada no formul√°rio.
import { postClientReview } from './clientReviewsService.js';

// Este servi√ßo S√ì tem a fun√ß√£o de postar (POST), usada no formul√°rio.
import { postDeliveryReview } from './deliveryReviewsService.js';


// --- 2. EXPORTA√á√ÉO DOS SERVI√áOS ORGANIZADOS ---

/**
 * Servi√ßo para gerenciar as avalia√ß√µes do RESTAURANTE.
 */
export const restaurantReviewService = {
  getRestaurantReviews: getRestaurantReviews,
  createReview: postRestaurantReview,
};

/**
 * Servi√ßo para gerenciar as avalia√ß√µes dos CLIENTES.
 */
export const clientReviewService = {
  // A fun√ß√£o getClientReviews n√£o existe, ent√£o n√£o a inclu√≠mos.
  createReview: postClientReview,
};

/**
 * Servi√ßo para gerenciar as avalia√ß√µes dos ENTREGADORES.
 */
export const deliveryReviewService = {
  // A fun√ß√£o getDeliveryReviews n√£o existe, ent√£o n√£o a inclu√≠mos.
  createReview: postDeliveryReview,
};


// --- 3. FUN√á√ïES UTILIT√ÅRIAS ---
// (Esta parte continua a mesma)

export const reviewUtils = {
  formatReviewDate(dateString) {
    if (!dateString) return 'Data indispon√≠vel';
    try {
      const date = new Date(dateString);
      if (isNaN(date.getTime())) {
        return 'Data inv√°lida';
      }
      return date.toLocaleDateString('pt-BR', {
        day: '2-digit',
        month: '2-digit',
        year: 'numeric',
      });
    } catch (error) {
      console.error("Erro ao formatar data:", dateString, error);
      return 'Data inv√°lida';
    }
  },
  
  validateReviewData(rating, orderId) {
    const errors = [];
    if (typeof rating !== 'number' || rating < 1 || rating > 5) {
      errors.push('A nota da avalia√ß√£o deve ser um n√∫mero entre 1 e 5.');
    }
    if (!orderId || typeof orderId !== 'string' || orderId.trim() === '') {
      errors.push('A refer√™ncia do pedido √© obrigat√≥ria para a avalia√ß√£o.');
    }
    return errors;
  }
};

console.log('‚úÖ M√≥dulo central de servi√ßos de avalia√ß√£o (reviewServices.js) CORRIGIDO e pronto.');
